
# 애자일 강의 배운점, 느낀점
## 목차
1. 애자일이란
2. 내가 몰랐던 것들
3. 느낀점, 배운점

## 애자일이란

![Alt text](image-1.png)
- 애자일(Agile)은 소프트웨어 개발 및 프로젝트 관리 등 다양한 분야에서 사용되는 반복적이고 적응적인 개발 방법론이나 프로젝트 관리 방법론을 나타냅니다. 이러한 방법론은 초기에 계획을 세우고 고정된 계획을 따르는 대신, 변화에 빠르게 대응하고 고객의 피드백을 수용하는 데 중점을 둡니다.

:point_right: 계획을 세우고 무조건적으로 그 계획에 맞춰서 개발을 하는게 아닌 당장 할 수 있는 것들, 필요한 것들을 우선으로 개발하는 방법.
![Alt text](image-3.png)

애자일 모델의 원칙
1. 고객만족 최우선 : 요구사항이 들어오면 맞춰줘야함
2. 변경 요구사항 환영 : 아무리 개발이 다 끝나간다 하더라도 요구사항이 들어오면 환영해야함
3. 자주 소프트웨어 배포 : 짧은 기간 선호
4. 사업 관계자와 개발자간의 지속적인 소통
5. 동기가 부여된 개인을 중심으로 프로젝트 구축
6. 개발 팀 내에서 대면 대화 선호 : 가장 효율적이고 효과적인 의사소통 방법
7. 작동하는 소프트웨어 -> 진행 상황의 주요 척도
8. 지속 가능한 개발 촉진
9. 기술적 우수성과 좋은 설계에 지속적으로 주의를 기울임 -> 품질 향상
10. 단순함 : 최대한 적은 양의 작업을 수행
11. 자율 조직 팀 : 최고의 아키텍처, 요구사항, 설계에 있어서 제일 중요함
12. 정기적으로 팀은 변화할 방법 모색, 그에 따라 행동

기존의 모델과 차이

기존의 모델 : 폭포수 모델
![Alt text](image-4.png)

폭포수 모델 - 모든 기능을 한꺼번에 개발하기 시작
애자일 모델 - 우선순위를 정한 뒤 하나하나 개발

## 내가 몰랐던 것들

이때까지 알았던 소프트웨어 개발 프로세스 모델

이때까진 필요하면 만들고, 에러나면 고치고, 다 만들면 배포 후 유지보수 하면 끝나는줄 알았다.
굳이 따지자면 주먹구구식으로 개발하면 끝인 줄 알았음.

이 수업을 들은 후 실제 현업에선 이렇게 허술하게 개발하지 않는다는 것을 알았다.

또한 소프트웨어하면 프로그램만 말하는 줄 알았다.
소프트웨어의 범주에 프로그램 뿐만 아니라 개발 때 나온 생성물, 문서 등등도 포함된다는 것을 몰랐다.
이번 수업을 듣고 나서야 알았다.

## 느낀점, 배운점

1. 소프트웨어라는게 생각보다 더 넓은 범위를 가진 말이라는 걸 알았다.
2. 소프트웨어를 개발할 때 신경써야할 문제가 생각보다 많았다.
3. 개발자들은 항상 공부하고 배워야 한다고 하는데 그 이유를 알았다.
4. 소통의 필요성, 그중에서도 대면 대화의 필요성을 알았다.
5. 이 강의 안들었으면 취업했을 때 더 힘들었을거 같았다. 앞으로 애자일 방식을 조금이라도 써봐야 할 거 같다.